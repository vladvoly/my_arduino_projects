/*
СХЕМА - МАШИНКА: https://i.imgur.com/GzHb9nR.jpg

Список компонентов:
• Arduino NANO v3: http://ali.pub/3y70kz
• Провода: http://ali.pub/3y86fx
• Резисторы: http://ali.pub/3y80ej
• Адаптер для nRF24L01+: http://ali.pub/57ks47
• NRF24L01+: http://ali.pub/57ksgu
• Драйвер мотора MX1508: http://ali.pub/57ksq6
• Переменные резисторы 10К Ом: http://ali.pub/57kssw
• Макетная плата: http://ali.pub/3y86f5
*/

#include <SPI.h>
#include "nRF24L01.h"
#include "RF24.h"

RF24 radio(9, 10); // "создать" модуль на пинах 9 и 10 Для Уно
//RF24 radio(9,53); // для Меги

byte address[][6] = {"1Node", "2Node", "3Node", "4Node", "5Node", "6Node"}; //возможные номера труб

#define pin_c 3                             //pin control
#define pin_l 4                             //pin level

int val_run = 0;
int val_run_old = 0;

void setup() {
  pinMode(pin_c, OUTPUT);
  pinMode(pin_l, OUTPUT);

  Serial.begin(9600); //открываем порт для связи с ПК
  radio.begin(); //активировать модуль
  radio.setAutoAck(1);         //режим подтверждения приёма, 1 вкл 0 выкл
  radio.setRetries(0, 15);    //(время между попыткой достучаться, число попыток)
  radio.enableAckPayload();    //разрешить отсылку данных в ответ на входящий сигнал
  radio.setPayloadSize(32);     //размер пакета, в байтах

  radio.openReadingPipe(1, address[0]);     //хотим слушать трубу 0
  radio.setChannel(0x5a);  //выбираем канал (в котором нет шумов!)

  radio.setPALevel (RF24_PA_MAX); //уровень мощности передатчика. На выбор RF24_PA_MIN, RF24_PA_LOW, RF24_PA_HIGH, RF24_PA_MAX
  radio.setDataRate (RF24_250KBPS); //скорость обмена. На выбор RF24_2MBPS, RF24_1MBPS, RF24_250KBPS
  //должна быть одинакова на приёмнике и передатчике!
  //при самой низкой скорости имеем самую высокую чувствительность и дальность!!

  radio.powerUp(); //начать работу
  radio.startListening();  //начинаем слушать эфир, мы приёмный модуль
}

void loop() {
  byte pipeNo;
  while ( radio.available(&pipeNo)) {  // слушаем эфир со всех труб
    radio.read( &val_run, sizeof(val_run) );         // чиатем входящий сигнал
  }
  
  //Serial.println(val_run);
  
  if (val_run >= 10) {
    digitalWrite(pin_l, 0);
    analogWrite(pin_c, val_run);
  } else if (val_run <= -10 ) {
    digitalWrite(pin_l, 1);
    analogWrite(pin_c, 240 + val_run);
  } else {
    digitalWrite(pin_c, 0);
    digitalWrite(pin_l, 0);
  }
  //val_run_old = val_run;
}
